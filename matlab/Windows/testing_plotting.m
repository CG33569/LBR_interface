%------------ MAIN CODE FOR TESTING -------------
%% Adding dependencies
%clear
%clc
%Change this command to your repository address. 
folder_model = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall'];
addpath(folder_model);

% Add source directories
fcn_path = genpath('energy');
addpath(fcn_path);

%% Loading files 
data=load('onlyWall_APF_1.txt');

xGoal = data(:,1:3);
xVC = data(:,4:6);
x = data(:,7:9);

lambda = data(:,10);
beta = data(:,11);

%% plotting
figure
grid on
hold on
plot3(xGoal(:,1),xGoal(:,2), xGoal(:,3))
plot3(x(:,1),x(:,2), x(:,3))
%%
dataX = [0:length(x(:,3))-1];
figure
subplot(3,1,1)
grid on
hold on
plot(dataX,xGoal(:,3),'-g',dataX,x(:,3),'-b')
plot(dataX,xVC(:,3),'-r')
title('Z axis path')
legend('x goal', 'x ee' ,'vc')
xlim([dataX(1) dataX(end)])
xlabel('nr.Iteration')
ylabel('Position [mm]')

subplot(3,1,3)
grid on
hold on
title('Potential ratio on path')
plot(dataX,lambda,'-k')
legend('lambda')
xlim([dataX(1) dataX(end)])
xlabel('nr.Iteration')
ylabel('Potential ratio [non-dim]')

%% Calculating rho, rho0 and rho1 (3 AXIS)
rho = zeros(1,length(lambda));
rho1 = rho; rho0 = rho; deltaRho = rho;
delta = 0.3; % (for this file)

for j=1:length(rho)
   rho0(j) = sqrt((xGoal(j,1)-xVC(j,1))^2 + (xGoal(j,2)-xVC(j,2))^2  + (xGoal(j,3)-xVC(j,3))^2 );
   rho(j) = sqrt((x(j,1)-xVC(j,1))^2 + (x(j,2)-xVC(j,2))^2  + (x(j,3)-xVC(j,3))^2 );
   
   deltaRho(j) = delta*rho0(j);
end

%figure
subplot(3,1,2)
grid on
hold on
title('Distance between the ee-position and virtual wall')
plot(dataX,rho0,'-g',dataX,rho,'-b',dataX,deltaRho,'-r')
legend('rho0','rho','d*rho')
xlim([dataX(1) dataX(end)])
xlabel('nr.Iteration')
ylabel('Abs.distance [mm]')

%% Calculating rho, rho0 and rho1 (ONLY Z)
rho = zeros(1,length(lambda));
rho1 = rho; rho0 = rho; deltaRho = rho;
delta = 0.3; % (for this file)

for j=1:length(rho)
   rho0(j) = abs(xGoal(j,3)-xVC(j,3));
   rho(j) = abs(x(j,3)-xVC(j,3));
   
   deltaRho(j) = delta*rho0(j);
end

%figure
subplot(3,1,2)
grid on
hold on
title('Distance between the ee-position and virtual wall')
plot(dataX,rho0,'-g',dataX,rho,'-b',dataX,deltaRho,'-r')
legend('rho0','rho','d*rho')
xlim([dataX(1) dataX(end)])
xlabel('nr.Iteration')
ylabel('Abs.distance [mm]')

%% PLOTTING MULTIPLE TEST (wall_record)
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_record'];
addpath(folder_model);

name = 'onlyWall_APF_';    % files name from SAS.cpp on string format
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);     
% amount = how many recordings are on the folder

%k=1;

for k=1:amount
    
% reading data
full_name = [data_dir(k).folder '\' data_dir(k).name];
data=load(full_name);
xGoal = data(:,1:3);
xVC = data(:,4:6);
x = data(:,7:9);
lambda = data(:,10);
beta = data(:,11);
% Calculating rho, rho0 and rho1 (3 AXIS)
rho = zeros(1,length(lambda));
rho1 = rho; rho0 = rho; deltaRho = rho;
delta = 0.3; % (for this file)

for j=1:length(rho)
   rho0(j) = sqrt((xGoal(j,1)-xVC(j,1))^2 + (xGoal(j,2)-xVC(j,2))^2  + (xGoal(j,3)-xVC(j,3))^2 );
   rho(j) = sqrt((x(j,1)-xVC(j,1))^2 + (x(j,2)-xVC(j,2))^2  + (x(j,3)-xVC(j,3))^2 );
   
   deltaRho(j) = delta*rho0(j);
end

figure('Name',['Recording nr.' num2str(k)])

dataX = [0:length(x(:,3))-1];
subplot(3,1,1)
grid on
hold on
plot(dataX,xGoal(:,3),'-g',dataX,x(:,3),'-b')
plot(dataX,xVC(:,3),'-r')
title('Z axis path')
legend('x goal', 'x ee' ,'vc')
xlim([dataX(1) dataX(end)])
xlabel('nr.Iteration')
ylabel('Position [mm]')

subplot(3,1,3)
grid on
hold on
title('Potential ratio on path')
plot(dataX,lambda,'-k')
legend('lambda')
xlim([dataX(1) dataX(end)])
xlabel('nr.Iteration')
ylabel('Potential ratio [non-dim]')

subplot(3,1,2)
grid on
hold on
title('Distance between the ee-position and virtual wall')
plot(dataX,rho0,'-g',dataX,rho,'-b',dataX,deltaRho,'-r')
legend('rho0','rho','d*rho')
xlim([dataX(1) dataX(end)])
xlabel('nr.Iteration')
ylabel('Abs.distance [mm]')

end



%% 

%------------------------- Using plot APF ------------------------- 

% ( for wall )
%
%% recording 1
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_record'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.3;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    plotAPF(data_dir,k,delta,0,figName,tSample);
end

%% recording 2
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_record2'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.125;
for k=1:amount
    figName = ['Set 2 - Recording nr. ' num2str(k)];
    plotAPF(data_dir,k,delta,0,figName,tSample);
end

%% recording 3
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_record3'];
tSample = 0.002; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.6;
for k=1:amount
    figName = ['Set 3 - Recording nr. ' num2str(k)];
    plotAPF(data_dir,k,delta,0,figName,tSample);
end


%% recording 4
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_record4'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.6;
for k=1:amount
    figName = ['Set 4 - Recording nr. ' num2str(k)];
    plotAPF(data_dir,k,delta,0,figName,tSample);
end

%% 

%------------------------- Using plot APF ------------------------- 

% ( for tube )
%
%% recording 1 - delta 0.3
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R500_delta_03'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.3;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 2 - delta 0.3
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R250_delta_03'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.3;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 3 - delta 0.3
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R125_delta_03'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.3;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 4 - delta 0.125
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R500_delta_0125'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.125;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end
%% recording 5 - delta 0.125
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R250_delta_0125'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.125;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 6 - delta 0.125
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R125_delta_0125'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.125;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 7 - delta 0.75
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R500_delta_075'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.75;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 8 - delta 0.75
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R250_delta_075'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.75;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 9 - delta 0.75
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R125_delta_075'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.75;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    %plotAPF(data_dir,k,delta,0,figName,tSample);
    plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% Plotting lambda for report
tSample = 0.01; %s,

% Successfull: delta 0.3, R250
delta = 0.3;
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R250_delta_03'];
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[rho03,rho3,deltaRho3,lambda3,time3] = plotRatio(data_dir,9,delta,figName,'lambda',tSample);

% Acceptable: delta 0.75, R500
delta = 0.75;
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R500_delta_075'];
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[rho07,rho7,deltaRho7,lambda7,time7] = plotRatio(data_dir,1,delta,figName,'lambda',tSample);

% Failed: delta 0.125, R125
delta = 0.125;
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R125_delta_0125'];
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[rho01,rho1,deltaRho1,lambda1,time1] = plotRatio(data_dir,4,delta,figName,'lambda',tSample);

figure
% 1st recording
subplot(3,2,1)
grid on
hold on
title('Rvc = 250mm, delta = 0.3')
xlim([time2(1) time2(end)])
xlabel('Time [s]')
ylabel('Abs.distance [mm]')
plot(time3,rho03,'-g',time3,rho3,'-b',time3,deltaRho3,'-r')
legend('rho0','rho','d*rho')

subplot(3,2,2)
grid on
hold on
title('Potential ratio, delta = 0.3')
plot(time3,lambda3,'-k')
legend('lambda')
xlim([time3(1) time3(end)])
ylim([0 1])
xlabel('Time [s]')
ylabel('lambda [non-dim]')

% 2nd recording
subplot(3,2,3)
grid on
hold on
title('Rvc = 500mm, delta = 0.75')
xlim([time7(1) time7(end)])
xlabel('Time [s]')
ylabel('Abs.distance [mm]')
plot(time7,rho07,'-g',time7,rho7,'-b',time7,deltaRho7,'-r')
legend('rho0','rho','d*rho')

subplot(3,2,4)
grid on
hold on
title('Potential ratio, delta = 0.75')
plot(time7,lambda7,'-k')
legend('lambda')
xlim([time7(1) time7(end)])
ylim([0 1])
xlabel('Time [s]')
ylabel('lambda [non-dim]')

% 3rd recording
subplot(3,2,5)
grid on
hold on
title('Rvc = 125mm, delta = 0.125')
xlim([time1(1) time1(end)])
xlabel('Time [s]')
ylabel('Abs.distance [mm]')
plot(time1,rho01,'-g',time1,rho1,'-b',time1,deltaRho1,'-r')
legend('rho0','rho','d*rho')

subplot(3,2,6)
grid on
hold on
title('Potential ratio, delta = 0.125')
plot(time1,lambda1,'-k')
legend('lambda')
xlim([time1(1) time1(end)])
ylim([0 1])
xlabel('Time [s]')
ylabel('lambda [non-dim]')
%% 

%------------------------- Using plot APF ------------------------- 

% ( for new rectified wall )
%
%% recording 1 new - delta 0.125
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_newCorrection_delta125'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.125;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    plotAPF(data_dir,k,delta,0,figName,tSample);
    %plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 2 new - delta 0.3
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_newCorrection_delta3'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.3;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    plotAPF(data_dir,k,delta,0,figName,tSample);
    %plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% recording 3 new - delta 0.75
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_newCorrection_delta75'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.75;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    plotAPF(data_dir,k,delta,0,figName,tSample);
    %plotRatio(data_dir,k,delta,figName,'lambda',tSample);
end

%% Plotting lambda for report with a wall
tSample = 0.01; %s,

% sucess: 
delta = 0.125;
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_newCorrection_delta125'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
figName = 'delta 0.125'
[rho01,rho1,deltaRho1,lambda1,time1] = plotRatio(data_dir,5,delta,figName,'lambda',tSample);

% acceptable: nr.4
delta = 0.75;
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_newCorrection_delta75'];
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
figName = 'delta 0.75'
[rho07,rho7,deltaRho7,lambda7,time7] = plotRatio(data_dir,7,delta,figName,'lambda',tSample);

%failed
delta = 0.3;
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\wall_newCorrection_delta3'];
tSample = 0.01; %s,
name = 'onlyWall_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
figName = 'delta 0.3'
[rho03,rho3,deltaRho3,lambda3,time3] = plotRatio(data_dir,2,delta,figName,'lambda',tSample);


% plotting 
figure('Name', 'Most representative tests against the wall')
% sucess recording 
subplot(3,2,1)
grid on
hold on
title('Virtal wall, delta = 0.125')
xlim([time1(1) time1(end)])
xlabel('Time [s]')
ylabel('Abs.distance [mm]')
plot(time1,rho01,'-g',time1,rho1,'-b',time1,deltaRho1,'-r')
legend('rho0','rho','d*rho')

subplot(3,2,2)
grid on
hold on
title('Potential ratio, delta = 0.125')
plot(time1,lambda1,'-k')
legend('lambda')
xlim([time1(1) time1(end)])
ylim([0 1])
xlabel('Time [s]')
ylabel('lambda [non-dim]')

% acceptable
subplot(3,2,3)
grid on
hold on
title('Virtal wall, delta = 0.75')
xlim([time7(1) time7(end)])
xlabel('Time [s]')
ylabel('Abs.distance [mm]')
plot(time7,rho07,'-g',time7,rho7,'-b',time7,deltaRho7,'-r')
legend('rho0','rho','d*rho')

subplot(3,2,4)
grid on
hold on
title('Potential ratio, delta = 0.75')
plot(time7,lambda7,'-k')
legend('lambda')
xlim([time7(1) time7(end)])
ylim([0 1])
xlabel('Time [s]')
ylabel('lambda [non-dim]')

% Failed
subplot(3,2,5)
grid on
hold on
title('Virtal wall, delta = 0.3')
xlim([time3(1) time3(end)])
xlabel('Time [s]')
ylabel('Abs.distance [mm]')
plot(time3,rho03,'-g',time3,rho3,'-b',time3,deltaRho3,'-r')
legend('rho0','rho','d*rho')

subplot(3,2,6)
grid on
hold on
title('Potential ratio, delta = 0.3')
plot(time3,lambda3,'-k')
legend('lambda')
xlim([time3(1) time3(end)])
ylim([0 1])
xlabel('Time [s]')
ylabel('lambda [non-dim]')

% 3rd recording


%% testing the ratio plotting
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\tube_R500_delta_075'];
tSample = 0.01; %s,
name = 'onlyTube_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.75;
k = 2;
figName = ['Set 1 - Recording nr. ' num2str(k)];
plotRatio(data_dir,k,delta,figName,'lambda',tSample); % <- works




%% 

%------------------------- Using plot FOR BETA ------------------------- 

% ( for wall )
%
%% recording 1 - delta 0.3
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\beta'];
tSample = 0.01; %s,
name = 'beta_delta30_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.3;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    plotRatio(data_dir,k,delta,figName,'beta',tSample);
end

%% recording 2 - delta 0.75
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\beta'];
tSample = 0.01; %s,
name = 'beta_delta75_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.75;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    plotRatio(data_dir,k,delta,figName,'beta',tSample);
end

%% recording 3 - delta 0.125
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\beta'];
tSample = 0.01; %s,
name = 'beta_delta125_APF_';    % files generated by the Kuka program
data_dir = dir([folder_files '\'  name '*.txt']);
[amount dummy] = size(data_dir);  

delta = 0.125;
for k=1:amount
    figName = ['Set 1 - Recording nr. ' num2str(k)];
    plotRatio(data_dir,k,delta,figName,'beta',tSample);
end

%% Plotting beta for report
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\beta'];
% recording nr.4 from delta 0.125
name = 'beta_delta125_APF_2'; 
data_dir = dir([folder_files '\'  name '.txt']);
delta = 0.125;
figName = ['Set 1 - Recording nr. 2'];
[rho02,rho2,deltaRho2,beta2,time2] = plotRatio(data_dir,1,delta,figName,'beta',tSample);


name = 'beta_delta75_APF_1'; 
data_dir = dir([folder_files '\'  name '.txt']);
delta = 0.75;
figName = ['Set 1 - Recording nr. 1'];
[rho01,rho1,deltaRho1,beta1,time1] = plotRatio(data_dir,1,delta,figName,'beta',tSample);

figure
% 1st recording
subplot(2,2,1)
grid on
hold on
title('Velocity values for  delta = 0.125')
xlim([time2(1) time2(end)])
xlabel('Time [s]')
ylabel('Abs. vel difference [mm/s]')
plot(time2,rho02,'-g',time2,rho2,'-b',time2,deltaRho2,'-r')
legend('rho0','rho','d*rho')

subplot(2,2,2)
grid on
hold on
title('Velocity ratio for delta = 0.125')
plot(time2,beta2,'-k')
legend('beta')
xlim([time2(1) time2(end)])
xlabel('Time [s]')
ylabel('beta [non-dim]')

% 2nd recording
subplot(2,2,3)
grid on
hold on
title('Velocity values for delta = 0.75')
xlim([time1(1) time1(end)])
xlabel('Time [s]')
ylabel('Abs. vel difference [mm/s]')
plot(time1,rho01,'-g',time1,rho1,'-b',time1,deltaRho1,'-r')
legend('rho0','rho','d*rho')

subplot(2,2,4)
grid on
hold on
title('Velocity ratio for delta = 0.75')
plot(time1,beta1,'-k')
legend('beta')
xlim([time1(1) time1(end)])
xlabel('Time [s]')
ylabel('beta [non-dim]')
%% 

%------------------------- Using plot FOR BETA ------------------------- 

% ( for wall )
%
%% testing code for the plotting function
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\vwall\beta'];
tSample = 0.01; %s,
name = 'beta_delta30_APF_';    % files generated by the Kuka program
files_dir = dir([folder_files '\'  name '*.txt']); 
pos = 1;

plotRatio(files_dir,1,0.3,'whateveer','beta',tSample);

full_name = [files_dir(pos).folder '\' files_dir(pos).name];
data=load(full_name);
xGoal = zeros(length(data(:,1)),3);
xVC = data(:,1:3);
x = data(:,4:6);
beta = data(:,7);
% Calculating rho, rho0 and rho1 (3 AXIS)
rho = zeros(1,length(beta));
rho1 = rho; rho0 = rho; deltaRho = rho;

for j=1:length(rho)
   rho0(j) = sqrt((xGoal(j,1)-xVC(j,1))^2 + (xGoal(j,2)-xVC(j,2))^2  + (xGoal(j,3)-xVC(j,3))^2 );
   rho(j) = sqrt((x(j,1)-xVC(j,1))^2 + (x(j,2)-xVC(j,2))^2  + (x(j,3)-xVC(j,3))^2 );
   
   deltaRho(j) = delta*rho0(j);
end
figName = 'Whateeeeever';
figure('Name',figName)

dataX = [0:length(x(:,3))-1]*tSample;
subplot(3,1,1)
grid on
hold on
plot(dataX,xGoal(:,3),'-g',dataX,x(:,3),'-b')
plot(dataX,xVC(:,3),'-r')
title('Z axis path')
legend('x goal', 'x ee' ,'vc')
xlim([dataX(1) dataX(end)])
xlabel('Time [s]')
ylabel('Position [mm]')

subplot(3,1,3)
grid on
hold on
title('Potential ratio on path')
plot(dataX,beta,'-k')
legend('lambda')
xlim([dataX(1) dataX(end)])
xlabel('Time [s]')
ylabel('Potential ratio [non-dim]')

subplot(3,1,2)
grid on
hold on
title('Distance between the ee-position and virtual wall')
xlim([dataX(1) dataX(end)])
xlabel('Time [s]')
ylabel('Abs.distance [mm]')
plot(dataX,rho0,'-g',dataX,rho,'-b',dataX,deltaRho,'-r')
legend('rho0','rho','d*rho')

hold off

%% Calculating averages:
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\trajectory\force_noise'];
name = 'fee20_10_';    % files generated by the Kuka program
files_dir = dir([folder_files '\'  name '*.txt']); 

tStep = 250; %ms

rtime_noise = 2.5*60*1000/tStep;
data_noise = load([files_dir(1).folder '\' files_dir(1).name]);
force_noise = data_noise(1:round(rtime_noise),1); % only the first 2.5 min
force_noise_av = mean(force_noise);
%mean = 3.9044

rtime_peaks = 0.5*60*1000/tStep;
data_peaks = load([files_dir(2).folder '\' files_dir(2).name]);
force_peaks = data_peaks(1:end,1); % only the first 2.5 min
force_maxPeak = max(force_peaks);
force_index = find(force_peaks == force_maxPeak);
%figure
%plot(force_peaks)
% max(force_peaks) = 19.5204

rtime_push = 0.5*60*1000/tStep;
data_push = load([files_dir(3).folder '\' files_dir(3).name]);
force_push = data_push(200:end,1); % only the first 2.5 min
%figure
%plot(force_push)

push_acc = [];
pointer_start = 0; pointer_end = 0;

for k=1:length(force_push)
    if(force_push(k)>20)
        push_acc = [push_acc; force_push(k)];
        pointer_end = k;
        if(pointer_start==0)
            pointer_start=k;
        end
    end
end

push_av = mean(push_acc);   % mean = 27.7259
push_sd = std(push_acc);    % 5.3509
% total: 33.0768

timeS =(tStep/1000);

figure('Name','Force at the end effector')
subplot(2,2,1)
grid on
hold on
title('Static force at the end effector')
ylabel('Force [N]')
xlabel('Time [s]')
dataX = timeS*[0:(length(force_noise)-1)];
xlim([0 dataX(end)])
plot(dataX, force_noise, dataX, force_noise_av*ones(length(dataX)),'-k');
legend('force','average')

subplot(2,2,2)
grid on
hold on
title('Force peaks at the end effector')
ylabel('Force [N]')
xlabel('Time [s]')
dataX = timeS*[0:(length(force_peaks)-1)];
xlim([0 dataX(end)])
plot(dataX,force_peaks,(force_index-1)*timeS,force_maxPeak,'*k');
legend('force','max peak')

subplot(2,1,2)
grid on
hold on
title('Average push force at the end effector')
ylabel('Force [N]')
xlabel('Time [s]')
dataX = timeS*[0:(length(force_push)-1)];
xlim([0 dataX(end)])
plot(dataX,force_push);

dataX_av =timeS*[(pointer_start):(pointer_end)];
plot(dataX_av,push_av*ones(1,length(dataX_av)),'-k');
plot(dataX_av,(push_av+push_sd)*ones(1,length(dataX_av)),'-r',dataX_av,(push_av-push_sd)*ones(1,length(dataX_av)),'-r');
legend('force','average','av+-std')

%% plotting forces
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\trajectory\force_velocity'];
name = 'fee20_10_';    % files generated by the Kuka program
files_dir = dir([folder_files '\'  name '*.txt']); 
[amount dummy] = size(files_dir);

tStep = 250; %ms
timeS =(tStep/1000);

rec_selected = [1 2 3];
nr_rows = length(rec_selected);
figure('Name',['force recording 1 -' num2str(nr_rows)] );
col = 1;

for k=1:nr_rows
    data = load([files_dir(1).folder '\' files_dir(rec_selected(k)).name]);
    force = data(:,1)';
    vel = data(:,2)';
    
    dataX = timeS * [0:length(force)-1];  
    
    subplot(nr_rows,2,col) 
    grid on
    hold on
    plot(dataX,force,'-b');
    xlim([dataX(1) dataX(end)])
    xlabel('Time [s]')
    ylabel('Force[Nm]')
    title(['Recording nr.' num2str(rec_selected(k)) ])
    hold off
    
    subplot(nr_rows,2,col+1)
    grid on
    hold on
    plot(dataX,vel,'-k');
    xlim([dataX(1) dataX(end)])
    xlabel('Time [s]')
    ylabel('Vel [non-dim]')
    title(['Recording nr.' num2str(rec_selected(k)) ])
    hold off
    
    col = col+2;
end


rec_selected = [1 6 7];
nr_rows = length(rec_selected);
figure('Name',['force recordings 1 -' num2str(nr_rows)] );
col = 1;

for k=1:nr_rows
    data = load([files_dir(1).folder '\' files_dir(rec_selected(k)).name]);
    force = data(:,1)';
    vel = data(:,2)';
    
    dataX = timeS * [0:length(force)-1];  
    
    subplot(nr_rows,2,col)
    grid on
    hold on
    plot(dataX,force,'-b');
    xlim([dataX(1) dataX(end)])
    xlabel('Time [s]')
    ylabel('Force[N]')
    title(['Force from recording nr.' num2str(rec_selected(k)) ])
    hold off
    
    subplot(nr_rows,2,col+1)
    grid on
    hold on
    plot(dataX,vel,'-k');
    xlim([dataX(1) dataX(end)])
    xlabel('Time [s]')
    ylabel('Vel [non-dim]')
    title(['Velocity from recording nr.' num2str(rec_selected(k)) ])
    hold off
    
    col = col+2;
end


%% 

%------------------------- Final plots ------------------------- 

% ( for wall )
%
%% testing the new function
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\trajectory'];
name = 'LRtube_R250_delta03_';    % files generated by the Kuka program
files_dir = dir([folder_files '\'  name '*.txt']); 
[amount dummy] = size(files_dir);
tSample = 0.1; %s

delta = 0.3;
deltaB = 0.125;
[rho,dataX] = plotAll(files_dir,1,delta,deltaB,'yuhuuuu',tSample);

%% last recordings with rvc = 250
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\trajectory'];
name = 'LRtube_R250_delta03_';    % files generated by the Kuka program
files_dir = dir([folder_files '\'  name '*.txt']); 
[amount dummy] = size(files_dir);
tSample = 0.1; %s

delta = 0.3;
deltaB = 0.125;

plotAll(files_dir,[1:amount],delta,deltaB,'LR, Rvc=250mm',tSample);

%% last recordings with rvc = 500
folder_files = ['C:\Users\Carolina\Desktop\net_shared\LBR_interface\matlab\Windows\trajectory'];
name = 'LRtube_R500_delta03_';    % files generated by the Kuka program
files_dir = dir([folder_files '\'  name '*.txt']); 
[amount dummy] = size(files_dir);
tSample = 0.1; %s

delta = 0.3;
deltaB = 0.125;
plotAll(files_dir,[1:amount],delta,deltaB,'LR, Rvc=500mm',tSample);